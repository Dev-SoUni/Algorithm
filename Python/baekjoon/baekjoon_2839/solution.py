# 3, 5

# 3 -> 1 | 3
# 4 -> -1
# 5 -> 1 | 5
# 6 -> 2 | 3 3
# 7 -> -1
# 8 -> 2 | 3 5
# 9 -> 3 | 3 3 3
# 10 -> 2 | 5 5
# 11 -> 3 | 3 3 5
# 12 -> 4 | 3 3 3 3
# 13 -> 3 | 3 5 5
# 14 -> 4 | 3 3 3 5
# 15 -> 3 | 5 5 5
# 16 -> 4 | 3 3 5 5
# 17 -> 5 | 3 3 3 3 5
# 18 -> 4 | 3 5 5 5

def solution(n):
    data = {
        3: [3],
        4: [],
        5: [5],
        6: [3, 3],
        7: [],
        8: [3, 5],
        9: [3, 3, 3],
        10: [5, 5],
    }

    for i in range(11, n+1):
        if i % 5 == 0:
            data[i] = [5] * int(i/5)
        else:
            data[i] = data[i-3] + [3]

    if len(data[n]) == 0:
        return -1

    return len(data[n])

an = solution(int(input()))
print(an)
